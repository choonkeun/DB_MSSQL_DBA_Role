
************************
sp_msforeachtable 사용방법
************************

이 Stored Procedure를 사용하는 방법은 모든 Table에 대하여 적용이 된다는 것이다.
우선 제약조건을 먼저 싹 제거하는 스크립트를 뽑아서 실행시키시고
그 후에 sp_msforeachtable로 DROP Table을 하면 모든 Table을 삭제할 수 있습니다.


---------------------
작업순서
---------------------
1. 체크 비활성
2. Triger OFF
3. FK 생성쿼리 뽑아두고
4. FK 제거
5. DTS를 이용한 Copy
6. 다시 FK 생성
7. 체크활성 및 트리거 활성
8. identity reseed

---------------------------------
1. Truncate할 수 있는 Table을 확인하기
---------------------------------
use calsysbo
go
exec sp_MSforeachtable 'TRUNCATE TABLE ?'  <-- 이렇게 모든 Table에 대하여 Truncate할 수 있는 Table이 있는가를 물어보면

실행 결과
Msg 4712, Level 16, State 1, Line 1
Cannot truncate table 'dbo.stockstatus'
because it is being referenced by a FOREIGN KEY constraint.     <-- 이렇게 Truncate 할 수 없는 Table을 보여준다.


---------------------------------
2. ALTER 할 수 있는 Table을 확인하기
---------------------------------

exec sp_MSforeachtable 'ALTER TABLE ? NOCHECK CONSTRAINT ALL'   <-- 이렇게 제약조건을 OFF시키고
exec sp_MSforeachtable 'ALTER TABLE ? DISABLE TRIGGER ALL'      <-- Trigger를 OFF시키고
exec sp_MSforeachtable 'TRUNCATE TABLE ?'                       <-- TRuncate할 수 있는 Table을 List해도 결과는?

Msg 4712, Level 16, State 1, Line 1
Cannot truncate table 'dbo.stockstatus'
because it is being referenced by a FOREIGN KEY constraint.     <-- 이렇게 Truncate 할 수 없는 Table을 보여준다.



---------------------------------
3. FK가 걸려있는 Table List를 확인한다.
---------------------------------

SELECT  'ALTER TABLE [' + SObject.name + '] ADD CONSTRAINT ' + SObject3.name + ' FOREIGN KEY ('
            + SColumns.name + ' ) REFERENCES ' + SObject2.name + ' ( ' + SColumns2.name + ' )'
  FROM  dbo.sysforeignkeys AS SYSFK 
        INNER JOIN (SELECT  uid, id, name    FROM  dbo.sysobjects                   WHERE (xtype = 'U')) AS SObject     ON SYSFK.fkeyid = SObject.id 
        INNER JOIN (SELECT  uid, id, name    FROM  dbo.sysobjects  AS sysobjects_2  WHERE (xtype = 'U')) AS SObject2    ON SYSFK.rkeyid = SObject2.id 
        INNER JOIN (SELECT  id, colid, name  FROM  dbo.syscolumns) AS SColumns                                          ON SYSFK.fkeyid = SColumns.id AND SYSFK.fkey = SColumns.colid 
        INNER JOIN (SELECT  id, colid, name  FROM  dbo.syscolumns  AS syscolumns_1) AS SColumns2                        ON SYSFK.rkeyid = SColumns2.id AND SYSFK.rkey = SColumns2.colid 
        INNER JOIN (SELECT  id, name         FROM  dbo.sysobjects  AS sysobjects_1) AS SObject3                         ON SYSFK.constid = SObject3.id 
        INNER JOIN dbo.sysusers AS SUser ON SObject.uid = SUser.uid 
        INNER JOIN dbo.sysusers AS SUser2 ON SObject2.uid = SUser2.uid


----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
위의 긴문장을 실행한 결과는 다음과 같다.
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ALTER TABLE [serial] ADD CONSTRAINT FK_serial_stockcode FOREIGN KEY (StockCode ) REFERENCES stockstatus ( StockCode )
ALTER TABLE [company] ADD CONSTRAINT FK_company_state FOREIGN KEY (StateID ) REFERENCES state ( StateID )
ALTER TABLE [employee] ADD CONSTRAINT FK_employee_state FOREIGN KEY (StateID ) REFERENCES state ( StateID )
ALTER TABLE [employee] ADD CONSTRAINT FK_employee_department FOREIGN KEY (DepartmentCode ) REFERENCES department ( DepartmentCode )
ALTER TABLE [wopartlist] ADD CONSTRAINT FK_WoPartList_workorder FOREIGN KEY (WorkOrderNumber ) REFERENCES workorder ( WorkOrderNumber )
ALTER TABLE [po_inventory_report] ADD CONSTRAINT FK_po_inventory_report_po FOREIGN KEY (PONumber ) REFERENCES po ( PONumber )
ALTER TABLE [int_partconsist] ADD CONSTRAINT FK_int_partconsist_int_partconsist FOREIGN KEY (ConsistID ) REFERENCES int_partconsist ( ConsistID )
ALTER TABLE [int_partalternate] ADD CONSTRAINT FK_int_partalternate_int_partalternate FOREIGN KEY (AlternateID ) REFERENCES int_partalternate ( AlternateID )
ALTER TABLE [serial] ADD CONSTRAINT FK_serial_part FOREIGN KEY (PartID ) REFERENCES part ( PartID )
ALTER TABLE [psseriallist] ADD CONSTRAINT FK_psseriallist_part FOREIGN KEY (PartID ) REFERENCES part ( PartID )
ALTER TABLE [int_partpartnumber2] ADD CONSTRAINT FK_int_partpartnumber2_part FOREIGN KEY (PartID ) REFERENCES part ( PartID )
ALTER TABLE [numbers] ADD CONSTRAINT FK_numbers_numbertype FOREIGN KEY (NumberTypeCode ) REFERENCES numbertype ( NumberTypeCode )
ALTER TABLE [serial] ADD CONSTRAINT FK_serial_company FOREIGN KEY (VendorID ) REFERENCES company ( CompanyID )
ALTER TABLE [contact] ADD CONSTRAINT FK_contact_company FOREIGN KEY (CompanyID ) REFERENCES company ( CompanyID )
ALTER TABLE [part] ADD CONSTRAINT FK_part_condition FOREIGN KEY (ConditionCode ) REFERENCES condition ( ConditionCode )
ALTER TABLE [wopartlist] ADD CONSTRAINT FK_WoPartList_condition FOREIGN KEY (ConditionCode ) REFERENCES condition ( ConditionCode )
ALTER TABLE [workorder] ADD CONSTRAINT FK_workorder_wostatus FOREIGN KEY (WoStatusCode ) REFERENCES wostatus ( WoStatusCode )

(17 row(s) affected)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------
4. FK의 제약조건을 DROP한다.(실제로는 CONSTRAINT를 OFF하는 역할만 한다)
---------------------------------

SELECT  'ALTER TABLE [' + TABLE_NAME +'] DROP CONSTRAINT ' + CONSTRAINT_NAME
  FROM  INFORMATION_SCHEMA.TABLE_CONSTRAINTS
 WHERE  CONSTRAINT_NAME like '%FK%'

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
위의 문장을 실행한 결과는 다음과 같다.
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ALTER TABLE [int_partconsist] DROP CONSTRAINT FK_int_partconsist_int_partconsist
ALTER TABLE [int_partalternate] DROP CONSTRAINT FK_int_partalternate_int_partalternate
ALTER TABLE [part] DROP CONSTRAINT FK_part_condition
ALTER TABLE [company] DROP CONSTRAINT FK_company_state
ALTER TABLE [employee] DROP CONSTRAINT FK_employee_department
ALTER TABLE [employee] DROP CONSTRAINT FK_employee_state
ALTER TABLE [po_inventory_report] DROP CONSTRAINT FK_po_inventory_report_po
ALTER TABLE [numbers] DROP CONSTRAINT FK_numbers_numbertype
ALTER TABLE [workorder] DROP CONSTRAINT FK_workorder_wostatus
ALTER TABLE [wopartlist] DROP CONSTRAINT FK_WoPartList_condition
ALTER TABLE [wopartlist] DROP CONSTRAINT FK_WoPartList_workorder
ALTER TABLE [serial] DROP CONSTRAINT FK_serial_company
ALTER TABLE [serial] DROP CONSTRAINT FK_serial_part
ALTER TABLE [serial] DROP CONSTRAINT FK_serial_stockcode
ALTER TABLE [psseriallist] DROP CONSTRAINT FK_psseriallist_part
ALTER TABLE [contact] DROP CONSTRAINT FK_contact_company
ALTER TABLE [int_partpartnumber2] DROP CONSTRAINT FK_int_partpartnumber2_part

(17 row(s) affected)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


이 DTS를 이용하며 모든 Table들을 Copy한다


----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

---------------------------------
5. FK의 제약조건을 다시 ADD한다.(실제로는 CONSTRAINT를 ON하는 역할만 한다)
---------------------------------

SELECT 'ALTER TABLE [' + SObject.name + '] ADD CONSTRAINT ' + SObject3.name + ' FOREIGN KEY ('
           + SColumns.name + ' ) REFERENCES ' + SObject2.name + ' ( ' + SColumns2.name + ' )'
  FROM  dbo.sysforeignkeys AS SYSFK 
    INNER JOIN (SELECT uid, id, name   FROM  dbo.sysobjects                  WHERE (xtype = 'U')) AS SObject    ON SYSFK.fkeyid = SObject.id 
    INNER JOIN (SELECT uid, id, name   FROM  dbo.sysobjects AS sysobjects_2  WHERE (xtype = 'U')) AS SObject2   ON SYSFK.rkeyid = SObject2.id 
    INNER JOIN (SELECT id, colid, name FROM  dbo.syscolumns) AS SColumns                                        ON SYSFK.fkeyid = SColumns.id AND SYSFK.fkey = SColumns.colid 
    INNER JOIN (SELECT id, colid, name FROM  dbo.syscolumns AS syscolumns_1) AS SColumns2                       ON SYSFK.rkeyid = SColumns2.id AND SYSFK.rkey = SColumns2.colid 
    INNER JOIN (SELECT id, name        FROM  dbo.sysobjects AS sysobjects_1) AS SObject3                        ON SYSFK.constid = SObject3.id 
    INNER JOIN  dbo.sysusers AS SUser       ON SObject.uid = SUser.uid 
    INNER JOIN  dbo.sysusers AS SUser2      ON SObject2.uid = SUser2.uid

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
위의 긴문장을 실행한 결과는 다음과 같다.
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ALTER TABLE [serial] ADD CONSTRAINT FK_serial_stockcode FOREIGN KEY (StockCode ) REFERENCES stockstatus ( StockCode )
ALTER TABLE [company] ADD CONSTRAINT FK_company_state FOREIGN KEY (StateID ) REFERENCES state ( StateID )
ALTER TABLE [employee] ADD CONSTRAINT FK_employee_state FOREIGN KEY (StateID ) REFERENCES state ( StateID )
ALTER TABLE [employee] ADD CONSTRAINT FK_employee_department FOREIGN KEY (DepartmentCode ) REFERENCES department ( DepartmentCode )
ALTER TABLE [wopartlist] ADD CONSTRAINT FK_WoPartList_workorder FOREIGN KEY (WorkOrderNumber ) REFERENCES workorder ( WorkOrderNumber )
ALTER TABLE [po_inventory_report] ADD CONSTRAINT FK_po_inventory_report_po FOREIGN KEY (PONumber ) REFERENCES po ( PONumber )
ALTER TABLE [int_partconsist] ADD CONSTRAINT FK_int_partconsist_int_partconsist FOREIGN KEY (ConsistID ) REFERENCES int_partconsist ( ConsistID )
ALTER TABLE [int_partalternate] ADD CONSTRAINT FK_int_partalternate_int_partalternate FOREIGN KEY (AlternateID ) REFERENCES int_partalternate ( AlternateID )
ALTER TABLE [serial] ADD CONSTRAINT FK_serial_part FOREIGN KEY (PartID ) REFERENCES part ( PartID )
ALTER TABLE [psseriallist] ADD CONSTRAINT FK_psseriallist_part FOREIGN KEY (PartID ) REFERENCES part ( PartID )
ALTER TABLE [int_partpartnumber2] ADD CONSTRAINT FK_int_partpartnumber2_part FOREIGN KEY (PartID ) REFERENCES part ( PartID )
ALTER TABLE [numbers] ADD CONSTRAINT FK_numbers_numbertype FOREIGN KEY (NumberTypeCode ) REFERENCES numbertype ( NumberTypeCode )
ALTER TABLE [serial] ADD CONSTRAINT FK_serial_company FOREIGN KEY (VendorID ) REFERENCES company ( CompanyID )
ALTER TABLE [contact] ADD CONSTRAINT FK_contact_company FOREIGN KEY (CompanyID ) REFERENCES company ( CompanyID )
ALTER TABLE [part] ADD CONSTRAINT FK_part_condition FOREIGN KEY (ConditionCode ) REFERENCES condition ( ConditionCode )
ALTER TABLE [wopartlist] ADD CONSTRAINT FK_WoPartList_condition FOREIGN KEY (ConditionCode ) REFERENCES condition ( ConditionCode )
ALTER TABLE [workorder] ADD CONSTRAINT FK_workorder_wostatus FOREIGN KEY (WoStatusCode ) REFERENCES wostatus ( WoStatusCode )

(17 row(s) affected)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


---------------------------------
6. FK의 제약조건을 다시 Enable한다.
---------------------------------

exec sp_MSforeachtable 'TRUNCATE TABLE ?'
exec sp_MSforeachtable 'ALTER TABLE ? CHECK CONSTRAINT ALL'
exec sp_MSforeachtable 'ALTER TABLE ? ENABLE TRIGGER ALL'

---------------------------------
7. identity 속성 칼럼 전부 초기화
---------------------------------

exec sp_MSforeachtable 'IF OBJECTPROPERTY(OBJECT_ID(''?''), ''TableHasIdentity'') = 1 BEGIN DBCC CHECKIDENT (''?'',RESEED,0) END'

위의 문장을 실행한 결과는 다음과 같다.
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Checking identity information: current identity value 'NULL', current column value '0'.
DBCC execution completed. If DBCC printed error messages, contact your system administrator.
Checking identity information: current identity value 'NULL', current column value '0'.
DBCC execution completed. If DBCC printed error messages, contact your system administrator.
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
